service: daniel-be-service
frameworkVersion: '2'
useDotenv: true
provider:
    name: aws
    runtime: nodejs12.x
    lambdaHashingVersion: 20201221
    timeout: 10
    stage: prod
    region: eu-west-1
    apiGateway:
        shouldStartNameWithService: true
        apiKeySourceType: AUTHORIZER

plugins:
    - '@kingdarboja/serverless-plugin-typescript'
    - serverless-offline

package:
    exclude:
        - ./**
        - '!node_modules/**'
    include:
        - package.json
        - package-lock.json
        - src/**

functions:
    daniel-be-service:
        handler: src/index.handler
        name: ${self:service}
        environment:
            NODE_ENV: production
            BASE_URL: '/api/v1'
            CLIENT_URL: 'https://danielmolina.net'
            LOCAL_URL: 'http://localhost:3000'
            SECRET_KEY: '${ssm:danielmolina-be-secret-token}'

        events:
            # This is to enable the preflight CORS request at express level
            - http:
                  path: '/api/v1/{proxy+}'
                  method: OPTIONS

            - http:
                  path: '/api/v1/example'
                  method: GET

resources:
    Resources:
        GatewayResponseDefault4XX:
            Type: 'AWS::ApiGateway::GatewayResponse'
            Properties:
                ResponseType: DEFAULT_4XX
                RestApiId:
                    Ref: 'ApiGatewayRestApi'
                ResponseParameters:
                    gatewayresponse.header.Access-Control-Allow-Origin: 'method.request.header.Origin'
                    gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
                    gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        GatewayResponseDefault5XX:
            Type: 'AWS::ApiGateway::GatewayResponse'
            Properties:
                ResponseType: DEFAULT_5XX
                RestApiId:
                    Ref: 'ApiGatewayRestApi'
                ResponseParameters:
                    gatewayresponse.header.Access-Control-Allow-Origin: 'method.request.header.Origin'
                    gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
                    gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"

custom:
    serverless-offline:
        stage: 'dev'
        httpPort: 8082
        noAuth: true
